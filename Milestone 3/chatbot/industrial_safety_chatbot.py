# -*- coding: utf-8 -*-
"""Untitled12.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1ffdH0lC0Lg_z46zkz4sjgkDuZuTBPlA7
"""

from google.colab import drive
drive.mount('/content/drive')

# Commented out IPython magic to ensure Python compatibility.
# %pip install flair

import json
import os
import random
import time
from tqdm import tqdm
import pickle
from scipy.spatial.distance import cosine
from flair.data import Sentence
from flair.embeddings import WordEmbeddings, DocumentPoolEmbeddings
embeddings = DocumentPoolEmbeddings([WordEmbeddings('en')],pooling='mean',)

EXIT_CODES = ['bye', 'see you', 'c ya', 'c u', 'exit']

def prepare_embeddings(input_file,output_file):
  print(1)
  global embeddings
  embedded_intent_dict = {}
  with open(input_file, 'rb') as file:
    intent_dict = json.load(file)
  for intent,examples in tqdm(intent_dict.items()):
    embedded_intent_dict[intent] = []
    for example in examples:
      sentence = Sentence(example)
      embeddings.embed(sentence)
      embedded_intent_dict[intent].append(sentence.embedding.detach().numpy())

  if not os.path.exists(os.path.dirname(output_file)):
      os.makedirs(os.path.dirname(output_file))

  pickle.dump(embedded_intent_dict,open( output_file, "wb+"))

def answer(message,embeddings_file,anwsers_file):
    global embeddings
    with open(embeddings_file, 'rb') as file:
        embedded_dict = pickle.load(file)
    message_sentence = Sentence(message)
    embeddings.embed(message_sentence)
    message_vector = message_sentence.embedding.detach().numpy()
    best_intent = ""
    best_score = 1
    for intent, examples in embedded_dict.items():
        for example in examples:
            score = cosine(message_vector, example)
            if(score<best_score):
                best_score = score
                best_intent = intent
    with open(anwsers_file) as file:
        anwsers_dict = json.load(file)
    if(best_intent in anwsers_dict):
        return random.choice(anwsers_dict[best_intent])
    else:
        return "I am sorry! Please rephrase your query to answer you."

# create Pickle file for runtime use.
input_file   = "/content/drive/MyDrive/Projects/AI-ML/Capstone/intents.json"
output_file  = "/content/drive/MyDrive/Projects/AI-ML/Capstone/intents_pkl.pickle"

prepare_embeddings(input_file, output_file)

if __name__ == "__main__":

  anwsers_file = "/content/drive/MyDrive/Projects/AI-ML/Capstone/answer.json"
  output_file  = "/content/drive/MyDrive/Projects/AI-ML/Capstone/intents_pkl.pickle"

  flag=True
  while(flag==True):
      input_message = input("Message: ")
      if(input_message.lower() not in EXIT_CODES):
        print(f"Bot:{answer(input_message,embeddings_file=output_file,anwsers_file=anwsers_file)}")
      else:
        flag=False
        print("CHAT: Bye! take care..")